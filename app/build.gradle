apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    aaptOptions {
        noCompress "tflite"  // Your model's file extension: "tflite", "lite", etc.
        noCompress "lite"
    }

    defaultConfig {
        applicationId "com.example.orangeai"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    configurations {
        all {
            exclude group: 'com.android.volley'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            res {
                srcDirs 'src/main/res', 'src/main/res/icons'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'

    // debugging local storage
    debugImplementation 'im.dino:dbinspector:3.4.1@aar'
    // TODO (Step 3: Firebase Authentication dependency.)
    // START
    // Firebase Authentication dependency
    implementation "com.google.firebase:firebase-auth:19.3.2"
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    // Firestone Authentication dependency
    implementation 'com.google.firebase:firebase-firestore:21.5.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // END
    //Motion layout
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'com.airbnb.android:lottie:2.7.0'

    implementation 'com.google.firebase:firebase-database:19.3.0'
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //Bottom Navigation
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    // Load Image views
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    // Lottie files
    implementation "com.airbnb.android:lottie:3.4.1"

    implementation 'com.mikhaellopez:circularprogressbar:3.0.3'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'
    //TF lite dependency
    implementation 'org.tensorflow:tensorflow-android:1.13.1'
    implementation 'com.google.mlkit:object-detection-custom:16.2.0'

    def camerax_version = "1.0.0-beta08"
    def lifecycle_version = "2.2.0"
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha15"
    // These are optional if using object detection instead of image labelling
    //    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    //    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Image labeling feature with custom classifier support
    implementation 'com.google.mlkit:image-labeling-custom:16.2.0'

    // Background Threads
    def work_version = "2.4.0"

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"

    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"


}

